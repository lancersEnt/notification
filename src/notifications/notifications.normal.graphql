
scalar DateTime

type Notification {
  id: ID!
  title: String!
  body: String!
  targetUserId: String!
  createdBy: String!
  status: String!
  seen: Boolean!
  createdAt: DateTime
  updatedAt: DateTime 
}

input CreateNotificationInput {
  title: String!
  body: String!
  targetUserId: String!
  createdBy: String!
  status: String
  seen: Boolean!
  createdAt: DateTime
}

input UpdateNotificationInput {
  title: String
  body: String
  targetUserId: String
  createdBy: String
  status: String
  seen: Boolean
  updatedAt: DateTime
}

type Query {
  notifications: [Notification]!
  notification(id: String!): Notification
  userNotifications(userId: String!): [Notification]!
}

type Mutation {
  createNotification(createNotificationInput: CreateNotificationInput!): Notification!
  updateNotification(id: String!, updateNotificationInput: UpdateNotificationInput!): Notification!
  removeNotification(id: String!): Notification
}

type NotificationCreatedResult {
  notification: Notification
}

type Subscription {
  notificationCreated(userId: String): NotificationCreatedResult
}
